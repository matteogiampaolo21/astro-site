---
import { Navbar } from '../components/Navbar.jsx';
import  Footer  from '../components/Footer.astro'

export interface Props {
	title: string;
}

const { title } = Astro.props;

---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		
		
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">
		
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

		<link 
			rel="stylesheet" 
			href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     		integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     		crossorigin=""
		/>
		<script 
			src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     		integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     		crossorigin="">
		</script>

		<title>{title}</title>
	</head>
	<body>
		
		<Navbar client:load />
		<slot />
		<Footer pageTitle={title}/>
		
		
	</body>
</html>

<style is:global>

	

	body{
		font-family: "Roboto Mono" , monospace;
		background-color: #e5e7eb;
		
	}
	.my-transition{
		transition: 0.3s
	}
	.brand{
		font-family: "Roboto Mono", monospace;
		font-weight: 400;
		letter-spacing: 0.1rem;
		color:#374151;
		font-size: 2.25rem/* 36px */;
    	line-height: 2.5rem/* 40px */;
	}
	.smooth-btn{
		transition: transform 750ms;
	}
	.smooth-btn:hover,.button:focus-visible{
		transform: translateY(-0.2rem);
		background-color: #dc2626;
		transition: transform 250ms;
	}
	::-webkit-scrollbar {
		width: 10px;
		
	}

	/* Track */
	::-webkit-scrollbar-track {
		background: #d1d5db;
	}
	
	/* Handle */
	::-webkit-scrollbar-thumb {
		background: #9ca3af; 
	}

	/* Handle on hover */
	::-webkit-scrollbar-thumb:hover {
		background: #6b7280; 
	}

	textarea:focus, input:focus{
    	outline: none;
		border-color: #9ca3af;
	}

	/* Button Animation */
	.my-btn.btn-under-anim::before{
		content: "";
		position: absolute;
		top: 45px;
		left: 0;
		right: 0;
		bottom: 0;
		height: 2px;
		background-color: #ef4444;
		transition: transform 300ms ease-in-out;
		transform: scaleX(0)
	}
	.my-btn.btn-under-anim:hover::before,
	.my-btn.btn-under-anim:focus::before{
		transform: scaleX(1);
	}


	.my-btn.btn-slide-anim::before{
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		z-index: -1;
		background-color: #ef4444;

		transition: transform 300ms ease-in-out;
		transform: scaleX(0);
		transform-origin: left;
	}
	.my-btn.btn-slide-anim:hover::before,
	.my-btn.btn-slide-anim:focus::before{
		transform: scaleX(1);
	}

	.my-btn.btn-slide-anim{
		transition: color 300ms ease-in-out;
		z-index: 1;
	}

	.my-btn.btn-slide-anim:hover,
	.my-btn.btn-slide-anim:focus {
		color: white;
	}
	/* Navbar */
	.hamburger-menu::before,
	.hamburger-menu::after,
	.hamburger-menu input{
		content: "";
		width: 23px;
		height: 3px;
		border-radius: 2pxpx;
		background-color: white;
	}
	.hamburger-menu{
		display: flex;
		flex-direction: column;
		gap: 5px;
		margin: 15px 10px;
		background-color: #b91c1c;
		border: #7f1d1d 4px solid;
		cursor: pointer;
		border-radius: 2px;
		padding: 9px 6px;
		width: max-content;
	}
	.hamburger-menu input{
		appearance: none;
		outline: none;
		z-index: 2;
		
	}
	.sidebar{
		transition: translate 300ms;
		translate: -100%;
		padding: 0.5rem 1rem;
		padding-top: calc(15px + 5px );
		background-color: #b91c1c;
		color:white;
		max-width: 15rem;
		border: #7f1d1d 4px solid;
		border-radius: 2px;
		height: max-content;
	}
	.hamburger-menu:has(input:checked) + .sidebar{
		translate: 0;
		margin-left: 10px;
		
	}	
	.my-active{ 	
    	position: fixed;
    	top: 0;
    	display: block;
    	z-index: 40;
	}
	.my-brightness{
		filter: brightness(0.3);
	}	


	/* Clean CSS */
	.blurred-img{
		background-size:cover;
		background-repeat: no-repeat;
		background-position: center;
	}
	.blurred-img::before {
		content: "";
		position: absolute;
		inset: 0;
		opacity: 0;
		animation: pulse 5.5s infinite;
		
	}

	@keyframes pulse {
		0% {
			opacity: 0;
		}
		50% {
			opacity: 0.1;
		}
		100% {
			opacity: 0;
		}
	}

	.blurred-img.loaded::before {
		animation: none;
		content: none;
	}

	.blurred-img img {
		opacity: 0;
		transition: opacity 1000ms ease-in-out;
	}

	.blurred-img.loaded img {
		opacity: 1;
	}

</style>
<script>
	const blurredImageDiv = document.querySelectorAll(".blurred-img");
	
	for (let index = 0; index < blurredImageDiv.length; index++) {
		const img = blurredImageDiv[index].querySelector("img");

		if (img.complete) {
			blurredImageDiv[index].classList.add("loaded")
		} else {
			img.addEventListener("load", function(){
				blurredImageDiv[index].classList.add("loaded")
			})
		}
		
	}
	


	
</script>
